This patch is applied only when cross building. It makes sure that the native
version of doxygen is used for documentation generation and not the freshly built
one (which cannot be executed on host).
--- a/doc/CMakeLists.txt
+++ b/doc/CMakeLists.txt
@@ -21,13 +21,9 @@
 find_program(MAKEINDEX NAMES makeindex )
 include(GNUInstallDirs)
 
-if (doxygen_BINARY_DIR)
-    set(DOXYGEN_EXECUTABLE ${doxygen_BINARY_DIR}/bin/doxygen)
-else()
     # when building only the doxygen_doc, from the doc/ directory, the
     # doxygen project variables are unknown so look for doxygen in PATH
     find_package(Doxygen)
-endif()
 
 set(DOC_INSTALL_DIR "share/doc/packages/doxygen" CACHE STRING "Relative path where to install the documentation")
 set(DOC_FILES
--- a/examples/CMakeLists.txt
+++ b/examples/CMakeLists.txt
@@ -62,6 +62,8 @@
   EXAMPLE_manual  EXAMPLE_mux
 )
 
+find_package(Doxygen)
+
 foreach (f_inp  ${BASIC_EXAMPLES})
 	list(LENGTH ${f_inp} f_len)
 	list(GET    ${f_inp} 0 f)
@@ -74,7 +76,7 @@
     add_custom_command(
         COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/html/examples/${f}
         COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/latex/examples/${f}
-        COMMAND ${CMAKE_COMMAND} -E env PROJECT_BINARY_DIR=${PROJECT_BINARY_DIR} ${EXECUTABLE_OUTPUT_PATH}/doxygen ${f}.cfg
+        COMMAND ${CMAKE_COMMAND} -E env PROJECT_BINARY_DIR=${PROJECT_BINARY_DIR} ${DOXYGEN_EXECUTABLE} ${f}.cfg
         COMMAND ${PYTHON_EXECUTABLE}  ${TOP}/examples/strip_example.py  < ${PROJECT_BINARY_DIR}/latex/examples/${f}/latex/refman.tex > ${PROJECT_BINARY_DIR}/latex/examples/${f}/latex/refman_doc.tex
 	DEPENDS doxygen ${f}.${f_ext} ${f}.cfg ${TOP}/examples/strip_example.py ${f_dep}
 	OUTPUT ${PROJECT_BINARY_DIR}/html/examples/${f}/html/index.html ${PROJECT_BINARY_DIR}/latex/examples/${f}/latex/refman_doc.tex
